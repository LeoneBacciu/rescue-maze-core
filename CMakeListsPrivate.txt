# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "bluepill_f103c8" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)

# Convert "Home Directory" that may contain unescaped backslashes on Windows

set(CLION_SVD_FILE_PATH "$ENV{HOME}/.platformio/platforms/ststm32/misc/svd/STM32F103xx.svd" CACHE FILEPATH "Peripheral Registers Definitions File" FORCE)

SET(CMAKE_C_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/bin/arm-none-eabi-gcc")
SET(CMAKE_CXX_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/bin/arm-none-eabi-g++")
SET(CMAKE_CXX_FLAGS "-std=gnu++14 -fno-threadsafe-statics -fno-rtti -fno-exceptions -fno-use-cxa-atexit -fexceptions -Os -mcpu=cortex-m3 -mthumb -ffunction-sections -fdata-sections -nostdlib --param max-inline-insns-single=500")
SET(CMAKE_C_FLAGS "-std=gnu11 -fexceptions -Os -mcpu=cortex-m3 -mthumb -ffunction-sections -fdata-sections -nostdlib --param max-inline-insns-single=500")

SET(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 14)

if (CMAKE_BUILD_TYPE MATCHES "bluepill_f103c8")
    add_definitions(-DPLATFORMIO=50205)
    add_definitions(-DSTM32F1)
    add_definitions(-DSTM32F103xB)
    add_definitions(-DARDUINO_BLUEPILL_F103C8)
    add_definitions(-DENABLE_HWSERIAL2)
    add_definitions(-D_EXECUTION_ENVIRONMENT=1)
    add_definitions(-DPIO_FRAMEWORK_ARDUINO_ENABLE_CDC)
    add_definitions(-DSTM32F1xx)
    add_definitions(-DARDUINO=10808)
    add_definitions(-DARDUINO_ARCH_STM32)
    add_definitions(-DARDUINO_BLUEPILL_F103C8_128K)
    add_definitions(-DBOARD_NAME=\"BLUEPILL_F103C8_128K\")
    add_definitions(-DHAL_UART_MODULE_ENABLED)
    add_definitions(-DUSE_FULL_LL_DRIVER)
    add_definitions(-DVARIANT_H=\"variant_PILL_F103Cx.h\")
    add_definitions(-DUSBD_USE_CDC)
    add_definitions(-DUSBCON)
    add_definitions(-DUSB_VID=0x1EAF)
    add_definitions(-DUSB_PID=0x0003)
    add_definitions(-DHAL_PCD_MODULE_ENABLED)

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Compass")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Temp")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Serial")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Brick")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Lasers")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Driver")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Gyro")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/MPU6050")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/I2Cdev")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Floor")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Logger")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/extra")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Bus")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Notification")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/PrivateInclude")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/STM32F1xx/F103C8T_F103CB(T-U)")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/bluepill_f103c8/I2Cdevlib-Core")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/RGB_LED_TLC59731/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SPI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/bluepill_f103c8/*.*
    )
endif()


FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/src/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
    ${CMAKE_CURRENT_LIST_DIR}/test/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
